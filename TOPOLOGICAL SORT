#include <bits/stdc++.h>

void dfs( vector<int> adj[], vector<int> &vis, 
int node,  stack<int> &st ){
    vis[node]=1;
    
    for(auto it : adj[node]){
        if(!vis[it]){
            dfs(adj, vis, it,  st);
        }
    }
    st.push(node);

}
vector<int> topologicalSort(vector<vector<int>> &graph, int e, int n) {
    // Write your code here!
    stack<int> st;
    vector<int> adj[n];
     for(auto it:graph)
{
 adj[it[0]].push_back(it[1]);
}
    vector<int> vis(n, 0);
    for(int i=0; i<n; i++){
        if(!vis[i]){
            dfs(adj, vis, i, st);
        }
    }
    vector<int> ans;
     while(st.size()>0){

        ans.push_back(st.top());

        st.pop();

    }
    return ans;

}
